name: Test, Build and Deploy
on: [push]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Test
        uses: cedrickring/golang-action/go1.12@1.3.0
        with:
          args: go test ./... -coverprofile=coverage.txt -covermode=atomic -coverpkg=myblog/app
        env:
          GO111MODULE: on
          GOFLAGS: -mod=vendor

      - name: Upload Coverage to CodeCov
        run: curl -s https://codecov.io/bash | bash -s -- -t ${{secrets.CODECOV_TOKEN}} -f ./coverage.txt
  build_and_push_image:
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set Envs
        # | ::set-env explanation
        # Bit of non-dry code here, also copied to the "Deploy to Staging" job to calculate ENVs
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env
        run: |
          BRANCH_NAME="`echo $GITHUB_REF | awk -F'/' '{print $3}'`"; \
          IMAGE_TAG_NAME="cflynnus/blog:${BRANCH_NAME}-${GITHUB_SHA}"; \
          echo "::set-env name=IMAGE_TAG_NAME::$IMAGE_TAG_NAME"; \

      - name: Docker Login, Build, Tag and Push
        run: |
          echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin; \
          docker build . --file Dockerfile -t "$IMAGE_TAG_NAME"; \
          docker tag "$IMAGE_TAG_NAME" cflynnus/blog:latest; \
          docker push "$IMAGE_TAG_NAME"; \
          docker push cflynnus/blog:latest; \
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build_and_push_image
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set Envs & Install Helm4 Client
        # | ::set-env explanation
        # Bit of non-dry code here, also copied to the "Deploy to Staging" job to calculate ENVs
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env
        run: |
          BRANCH_NAME="`echo $GITHUB_REF | awk -F'/' '{print $3}'`"; \
          IMAGE_TAG_NAME="cflynnus/blog:${BRANCH_NAME}-${GITHUB_SHA}"; \

          HELM_3_FILE="helm-v3.0.0-linux-amd64.tar.gz"; \
          HELM_URL="https://get.helm.sh/$HELM_3_FILE"; \
          curl -Ls "$HELM_URL" | tar xvz; \
          mkdir -p "$GITHUB_WORKSPACE/bin"; \
          mv linux-amd64/helm "$GITHUB_WORKSPACE/bin/helm3"; \
          echo "::add-path::$GITHUB_WORKSPACE/bin"; \

          echo "::set-env name=BRANCH_NAME::$BRANCH_NAME"; \
          echo "::set-env name=IMAGE_TAG_NAME::$IMAGE_TAG_NAME"; \
      - name: Install gcloud cli
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GCLOUD_SA_EMAIL }}
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}

      - name: gcloud configure
        run: |
          gcloud config set project ${{secrets.GCLOUD_PROJECT_ID}}; \
          gcloud config set compute/zone ${{secrets.GCLOUD_COMPUTE_ZONE}}; \
          gcloud container clusters get-credentials ${{secrets.GCLOUD_CLUSTER_NAME}}; \
      
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop'
        run: |
          helm3 upgrade blog --install --reuse-values --debug \
            --set develop_image="$IMAGE_TAG_NAME" \
            ./helm

      - name: Deploy to Production
        if: github.ref == 'refs/heads/master'
        run: |
          helm3 upgrade blog --install --reuse-values --debug \
            --set master_image="$IMAGE_TAG_NAME" \
            ./helm
      
      - name: Rollout Status
        run: kubectl rollout status "deployment/blog-$BRANCH_NAME-app"
