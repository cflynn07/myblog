name: Test, Build and Deploy
on: [push]
jobs:
  test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Go Test
        uses: cedrickring/golang-action/go1.12@1.3.0
        with:
          args: go test ./... -coverprofile=coverage.txt -covermode=atomic -coverpkg=myblog/app
        env:
          GO111MODULE: on
          GOFLAGS: -mod=vendor
      - name: Upload Coverage
        run: curl -s https://codecov.io/bash | bash -s -- -t ${{secrets.CODECOV_TOKEN}} -f ./coverage.txt
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@master
      - name: Docker Login
        uses: actions/docker/login@master
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      - name: Docker Build
        uses: actions/docker/cli@master
        with:
          args: build . --file Dockerfile -t cflynnus/blog:`echo ${GITHUB_REF} | cut -d'/' -f3`-${GITHUB_SHA}
      - name: Docker Tag Latest
        uses: actions/docker/cli@master
        with:
          args: tag cflynnus/blog:`echo ${GITHUB_REF} | cut -d'/' -f3`-${GITHUB_SHA} cflynnus/blog:latest
      - name: Docker Push Hash Tag
        uses: actions/docker/cli@master
        with:
          args: push cflynnus/blog:`echo ${GITHUB_REF} | cut -d'/' -f3`-${GITHUB_SHA} 
      - name: Docker Push Latest
        uses: actions/docker/cli@master
        with:
          args: push cflynnus/blog:latest
  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Setup Google Cloud
        uses: actions/gcloud/auth@master
        env:
          GCLOUD_AUTH: ${{secrets.GCLOUD_AUTH}}
      - name: gcloud config
        uses: actions/gcloud/cli@master
        env:
          GOOGLE_PROJECT_ID: blog-229516
        with:
          args: config set project ${GOOGLE_PROJECT_ID}
      - name: GCP List Containers
        uses: actions/gcloud/cli@master
        with:
          args: container clusters list
